# Emmerich Tending App Configurations
# github.com/rayandrews
# <raydreww@gmail.com>

# PULL UP / DOWN
# OFF  = 0
# DOWN = 1
# UP   = 2

[general]
name                         = "Emmerich Tending App"
debug                        = true # will log all debugging things

[devices]

# ----------------------------------------------------------
# Stepper Configuration
# ----------------------------------------------------------
[devices.stepper]
type                         = "A4988"

# stepper x-axis
[devices.stepper.x]
key                          = "STEPPER-X"
step-pin                     = 6
step-active-state            = true
dir-pin                      = 13
dir-active-state             = true
enable-pin                   = 9
enable-active-state          = true
steps-per-mm                 = 4
microsteps                   = 1
rpm                          = 50.0
acceleration                 = 10 # steps / s^2
deceleration                 = 10 # steps / s^2

# stepper y-axis
[devices.stepper.y]
key                          = "STEPPER-Y"
step-pin                     = 11
step-active-state            = true
dir-pin                      = 5
dir-active-state             = true
enable-pin                   = 9
enable-active-state          = true
steps-per-mm                 = 4
microsteps                   = 1
rpm                          = 50.0
acceleration                 = 10 # steps / s^2
deceleration                 = 10 # steps / s^2

# stepper z-axis
[devices.stepper.z]
key                          = "STEPPER-Z"
step-pin                     = 19
step-active-state            = true
dir-pin                      = 26
dir-active-state             = true
enable-pin                   = 9
enable-active-state          = true
steps-per-mm                 = 4
microsteps                   = 1
rpm                          = 20.0
acceleration                 = 10 # steps / s^2
deceleration                 = 10 # steps / s^2
# ----------------------------------------------------------
# End of Stepper Configuration
# ----------------------------------------------------------

[devices.spray]
key                          = "SPRAY"
pin                          = 21
duty-cycle                   = 127
active-state                 = true

# ----------------------------------------------------------
# Limit Switch for edge detection
# ----------------------------------------------------------
[devices.limit-switch]
type                         = "input"

# limit switch x-axis
[devices.limit-switch.x]
key                          = "LIMIT-X"
pin                          = 7
active-state                 = true

# limit switch y-axis
[devices.limit-switch.y]
key                          = "LIMIT-Y"
pin                          = 8
active-state                 = true

# limit switch z-axis upper bound
[devices.limit-switch.z1]
key                          = "LIMIT-Z1"
pin                          = 16
active-state                 = true

# limit switch z-axis lower bound
[devices.limit-switch.z2]
key                          = "LIMIT-Z2"
pin                          = 15
active-state                 = true
# ----------------------------------------------------------
# End of Limit Switch
# ----------------------------------------------------------

# ----------------------------------------------------------
# Communication
#
# Brief: Communication between PLC and RaspberryPI
# ----------------------------------------------------------
[devices.communication]

[devices.communication.input]
# communication from PLC to RaspberryPI

[devices.communication.input.tending-height]
key                          = "INPUT-PLC-TENDING-HEIGHT"
pin                          = 14
active-state                 = true

[devices.communication.input.spraying-height]
key                          = "INPUT-PLC-SPRAYING-HEIGHT"
pin                          = 17
active-state                 = true

[devices.communication.input.reset]
key                          = "INPUT-PLC-RESET"
pin                          = 27
active-state                 = true

[devices.communication.input.e-stop]
key                          = "INPUT-PLC-E-STOP"
pin                          = 10
active-state                 = true

[devices.communication.output]
# communication from PLC to RaspberryPI

[devices.communication.output.tending-ready]
key                          = "OUTPUT-PI-TENDING-READY"
pin                          = 22
active-state                 = true

[devices.communication.output.spraying-ready]
key                          = "OUTPUT-PI-SPRAYING-READY"
pin                          = 4
active-state                 = true

[devices.communication.output.tending-running]
key                          = "OUTPUT-PI-TENDING-RUNNING"
pin                          = 23
active-state                 = true

[devices.communication.output.spraying-running]
key                          = "OUTPUT-PI-SPRAYING-RUNNING"
pin                          = 24
active-state                 = true

[devices.communication.output.tending-complete]
key                          = "OUTPUT-PI-TENDING-COMPLETE"
pin                          = 25
active-state                 = true

[devices.communication.output.spraying-complete]
key                          = "OUTPUT-PI-SPRAYING-COMPLETE"
pin                          = 20
active-state                 = true
# ----------------------------------------------------------
# End of Communication
# ----------------------------------------------------------

# analog
[devices.analog]
key                          = "PCF8591"
rotary-encoder-pin           = 1

[mechanisms]

[mechanisms.movement]
path = [
  # x   y  (in mm, need to be in floating point)

  # edge
  [0.0,   0.0],
  [0.0,   400.0],
  [400.0, 400.0],
  [400.0, 0.0],
  [10.0,  40.0],

  # zigzag
  [0.0,   0.0],
  [0.0,   400.0],
  [100.0, 400.0],
  [100.0, 0.0],
  [200.0, 0.0],
  [200.0, 400.0],
  [300.0, 400.0],
  [300.0, 0.0],
  [400.0, 0.0],
  [400.0, 400.0],
]
